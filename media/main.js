!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(self,(function(){return(()=>{"use strict";var e={756:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const n={createFieldset:e=>function(e,t){const o=document.createElement("fieldset"),n=document.createElement("legend");let a=0;return n.contentEditable="true",n.textContent=e,n.addEventListener("input",(e=>{clearTimeout(a),a=window.setTimeout((()=>{t(e.target.textContent)}),800)})),o.appendChild(n),o}(e,n.onTitleChange),onTitleChange:o(721).noop};t.default={...n}},900:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=o(721);function a(e=null,t={}){const o=document.createElement("li"),n=document.createElement("input"),a=document.createElement("input"),l=function(e=null){const t=document.createElement("div");return t.className="color-preview",e&&(t.style.backgroundColor="#"+e),t}(),c=function(){const e=document.createElement("button"),t=document.createElement("i");return t.className="codicon codicon-trash",e.className="color-icon icon",e.appendChild(t),e}(),r=function(){const e=document.createElement("button"),t=document.createElement("i");return t.className="codicon codicon-clippy",e.className="color-icon icon",e.appendChild(t),e}();let d=0;const{onColorChange:s,onColorRemove:u,onNameChange:i}=t;return o.className="color-entry",n.className="color-input",n.placeholder="Color hex",a.className="color-input",a.placeholder="Color name or css var",a.disabled=!0,e&&(n.value=e.value,a.value=e.name,a.disabled=!1,l.style.backgroundColor="#"+e.value),o.appendChild(l),o.appendChild(n),o.appendChild(a),o.appendChild(r),o.appendChild(c),c.addEventListener("click",(()=>{u(n.value),o.remove()})),n.addEventListener("input",(e=>{clearTimeout(d),d=window.setTimeout((()=>{l.style.backgroundColor="#"+e.target.value,a.disabled=!1,a.focus(),s(e.target.value)}),800)})),a.addEventListener("input",(e=>{clearTimeout(d),d=window.setTimeout((()=>{i(e.target.value,n.value)}),800)})),r.addEventListener("click",(()=>{a.select(),a.setSelectionRange(0,99999),document.execCommand("copy")})),o}const l={createColorInput:(e=null)=>{const{onColorChange:t,onColorRemove:o,onNameChange:n}=l;return a(e,{onColorChange:t,onColorRemove:o,onNameChange:n})},onColorRemove:n.noop,onColorChange:n.noop,onNameChange:n.noop};t.default={...l}},351:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});const o={createGroup:()=>function(){const e=document.createElement("ul");return e.className="color-list",e}()};t.default={...o}},721:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.noop=void 0,t.noop=function(...e){}},519:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=o(756),a=o(351),l=o(900);!function(){const e=document.getElementById("app");if(e){const t=acquireVsCodeApi(),o=t.getState()||{name:"New Palette (click to edit)",colors:{}};let{colors:c}=o;const r=()=>!!Object.keys(c).length,{createFieldset:d}=n.default,{createGroup:s}=a.default,{createColorInput:u}=l.default;n.default.onTitleChange=e=>{t.setState({name:e,colors:c})},l.default.onColorChange=e=>{c[e]="",t.setState({name:o.name,colors:c})},l.default.onColorRemove=e=>{delete c[e],t.setState({name:o.name,colors:c})},l.default.onNameChange=(e,n)=>{c[e]=n,t.setState({name:o.name,colors:c})};const i=d(o.name),m=s();window.addEventListener("message",(e=>{switch(e.data.type){case"addColor":{const e=u();m.appendChild(e);break}case"clearColors":m.innerHTML="",c={},t.setState({name:o.name,colors:c})}})),r()&&Object.keys(c).forEach((e=>{const t=u({value:e,name:c[e]});m.appendChild(t)})),i.appendChild(m),e.appendChild(i)}}()}},t={};return function o(n){if(t[n])return t[n].exports;var a=t[n]={exports:{}};return e[n](a,a.exports,o),a.exports}(519)})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,