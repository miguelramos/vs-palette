!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o();else if("function"==typeof define&&define.amd)define([],o);else{var t=o();for(var n in t)("object"==typeof exports?exports:e)[n]=t[n]}}(self,(function(){return(()=>{"use strict";var e={756:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0});const n={createFieldset(e){return function(e,o){const t=document.createElement("fieldset"),n=document.createElement("legend");let l=0;return n.contentEditable="true",n.textContent=e,n.addEventListener("input",(e=>{clearTimeout(l),l=window.setTimeout((()=>{o(e.target.textContent)}),800)})),t.appendChild(n),t}(e,this.onTitleChange)},onTitleChange:t(721).noop};o.default=n},900:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0});const n=t(721);function l(e=null,o={}){const t=document.createElement("li"),n=document.createElement("input"),l=document.createElement("input"),a=function(e=null){const o=document.createElement("div");return o.className="color-preview",e&&(o.style.backgroundColor="#"+e),o}(),c=function(){const e=document.createElement("button"),o=document.createElement("i");return o.className="codicon codicon-trash",e.className="color-icon icon",e.appendChild(o),e}(),r=function(){const e=document.createElement("button"),o=document.createElement("i");return o.className="codicon codicon-clippy",e.className="color-icon icon",e.appendChild(o),e}();let s=0;return t.className="color-entry",n.className="color-input",n.placeholder="Color hex",l.className="color-input",l.placeholder="Color name or css var",l.disabled=!0,e&&(n.value=e.value,l.value=e.name,l.disabled=!1,a.style.backgroundColor="#"+e.value),t.appendChild(a),t.appendChild(n),t.appendChild(l),t.appendChild(r),t.appendChild(c),c.addEventListener("click",(()=>{o.onColorRemove(n.value),t.remove()})),n.addEventListener("input",(e=>{clearTimeout(s),s=window.setTimeout((()=>{a.style.backgroundColor="#"+e.target.value,l.disabled=!1,l.focus(),o.onColorChange(e.target.value)}),800)})),l.addEventListener("input",(e=>{clearTimeout(s),s=window.setTimeout((()=>{o.onNameChange(n.value,e.target.value)}),800)})),r.addEventListener("click",(()=>{l.select(),l.setSelectionRange(0,99999),document.execCommand("copy")})),t}const a={createColorInput(e=null){return l(e,{onColorChange:this.onColorChange,onColorRemove:this.onColorRemove,onNameChange:this.onNameChange})},onColorRemove:n.noop,onColorChange:n.noop,onNameChange:n.noop};o.default=a},351:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0});const t={createGroup:()=>function(){const e=document.createElement("ul");return e.className="color-list",e}()};o.default={...t}},721:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.noop=void 0,o.noop=function(...e){}},519:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0});const n=t(756),l=t(351),a=t(900);!function(){const e=document.getElementById("app");if(e){const o=acquireVsCodeApi(),t=o.getState()||{name:"New Palette (click to edit)",colors:{}},c=()=>!!Object.keys(t.colors).length;n.default.onTitleChange=e=>{o.setState({name:e,colors:t.colors})},a.default.onColorChange=e=>{t.colors[e]="",o.setState({name:t.name,colors:t.colors})},a.default.onColorRemove=e=>{delete t.colors[e],o.setState({name:t.name,colors:t.colors})},a.default.onNameChange=(e,n)=>{t.colors[e]=n,o.setState({name:t.name,colors:t.colors})};const r=n.default.createFieldset(t.name),s=l.default.createGroup();window.addEventListener("message",(e=>{switch(e.data.type){case"addColor":{const e=a.default.createColorInput();s.appendChild(e);break}case"clearColors":s.innerHTML="",t.colors={},o.setState({name:t.name,colors:t.colors})}})),c()&&Object.keys(t.colors).forEach((e=>{const o=a.default.createColorInput({value:e,name:t.colors[e]});s.appendChild(o)})),r.appendChild(s),e.appendChild(r)}}()}},o={};return function t(n){if(o[n])return o[n].exports;var l=o[n]={exports:{}};return e[n](l,l.exports,t),l.exports}(519)})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,